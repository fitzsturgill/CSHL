function TE = makeTE_AFC2_Odor(sessions)
    if nargin < 1
        sessions = bpLoadSessions;
    end
    
    % find total number of trials acrosss selected sesssions
    sTally = zeros(size(sessions));
    for i = 1:length(sessions)
        sTally(i) = sessions(i).SessionData.nTrials;
    end
    nTrials = sum(sTally);
    statesToAdd= {'Cue1', 'trigGrace_Cue', 'Cue2', 'LeftChoice', 'RightChoice', 'RewardLeft', 'RewardRight',...
        'Neutral', 'ITI'};
    %% initialize TE
    TE = struct(...
        'filename', [],... 
        'trialNumber', zeros(nTrials, 1),...
        'trialType', zeros(nTrials, 1),...  
        'trialOutcome', NaN(nTrials, 1),... 
        'choice', [],...
        'correctResponse', [],...
        'EW', NaN(nTrials, 1),...
        'switchParameter', NaN(nTrials, 1),...
        'switchParameterCriterion', NaN(nTrials, 1),...
        'pf_EW', NaN(nTrials, 1),...
        'pf_total', NaN(nTrials, 1),...
        'pf_left', NaN(nTrials, 1),...
        'pf_right', NaN(nTrials, 1),...
        'sessionIndex', NaN(nTrials, 1),...
        'sessionChange', NaN(nTrials, 1),...
        'ITI', zeros(nTrials, 1),...
        'odorValve', zeros(nTrials, 1),...
        'odorValveIndex', zeros(nTrials, 1),...
        'blockNumber', zeros(nTrials, 1),...                
        'blockFcn', zeros(nTrials, 1),...                        
        'trialStartTimestamp', NaN(nTrials, 1),...
        'sessions', []... % new 9/2018, store names and filepaths and sessionIndex, this struct is of length nsessions with fields: names, filespaths, indices
        );
    
    TE.sessions = struct(... % sessions fields so that you can easily reload sessions data to modify TE
        'filename', cell(length(sessions), 1),...
        'filepath', [],...
        'index', []...
        );    
    
    for i = 1:length(statesToAdd)
        TE(1).(statesToAdd{i}) = bpAddStateAsTrialEvent(sessions, statesToAdd{i});
    end
    
    % figure out left, middle and right port numbers
    portNumbers = [...
        sessions.SessionData.TrialSettings(1).GUI.LeftPort;...
        sessions.SessionData.TrialSettings(1).GUI.CenterPort;...
        sessions.SessionData.TrialSettings(1).GUI.RightPort;...
        ];
        
    TE(1).leftPort = bpAddEventAsTrialEvent(sessions, sprintf('Port%dIn', sessions.SessionData.TrialSettings(1).GUI.LeftPort));
    TE(1).centerPort = bpAddEventAsTrialEvent(sessions, sprintf('Port%dIn', sessions.SessionData.TrialSettings(1).GUI.LeftPort));
    TE(1).rightPort = bpAddEventAsTrialEvent(sessions, sprintf('Port%dIn', sessions.SessionData.TrialSettings(1).GUI.LeftPort));

    TE.filename = cell(nTrials, 1);
    TE.reinforcementOutcome = cell(nTrials, 1);
    TE.choice = cell(nTrials, 1);
    TE.correctResponse= cell(nTrials, 1);
    
    
    tcounter = 1;
    for sCounter = 1:length(sessions)
        session = sessions(sCounter);
        TE.sessions(sCounter).filename = session.filename;
        TE.sessions(sCounter).filepath = session.filepath;
        TE.sessions(sCounter).index = sCounter;
        for counter = 1:session.SessionData.nTrials
            TE.filename{tcounter,1} = session.filename;
            TE.trialNumber(tcounter,1) = counter;
            TE.trialType(tcounter,1) = session.SessionData.TrialType(counter);
            TE.trialOutcome(tcounter,1) = session.SessionData.TrialOutcome(counter);
            TE.odorValve(tcounter,1) = session.SessionData.OdorValve(counter);
            TE.odorValveIndex(tcounter,1) = session.SessionData.OdorValveIndex(counter);
            TE.blockNumber(tcounter,1) = session.SessionData.BlockNumber(counter);
            TE.reinforcementOutcome{tcounter, 1} = session.SessionData.ReinforcementOutcome{counter};
            TE.trialStartTimestamp(tcounter, 1) = session.SessionData.TrialStartTimestamp(counter);

            TE.sessionIndex(tcounter, 1) = sCounter;
            usTimes = [TE.Reward{tcounter}; TE.Punish{tcounter}; TE.WNoise{tcounter}; TE.Neutral{tcounter}];
            TE.Us{tcounter, 1} = [max(usTimes(:,1)) max(usTimes(:,2))];
            tcounter = tcounter + 1; % don't forget :)            
        end
    end
    
    
    